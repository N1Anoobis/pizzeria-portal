{"version":3,"sources":["components/views/TablesBookingID/TablesBookingID.module.scss","components/views/TablesBookingNew/TablesBookingNew.module.scss","components/views/TablesEventsNew/TablesEventsNew.module.scss","components/views/TablesEventsID/TablesEventsID.module.scss","components/views/Homepage/res.jpg","components/layout/PageNav/PageNav.js","components/layout/MainLayout/MainLayout.js","components/views/Homepage/Homepage.js","components/views/Login/Login.js","components/views/Tables/Tables.js","components/views/Waiter/Waiter.js","settings.js","redux/tablesRedux.js","components/views/Waiter/WaiterContainer.js","components/views/Kitchen/Kitchen.js","components/views/Kitchen/KitchenContainer.js","components/views/WaiterOrderID/WaiterOrderID.js","components/views/WaiterOrderNew/WaiterOrderNew.js","components/views/WaiterOrderNew/WaiterOrderNewContainer.js","components/views/TablesBookingID/TablesBookingID.js","components/views/TablesBookingNew/TablesBookingNew.js","components/views/TablesEventsNew/TablesEventsNew.js","components/views/TablesEventsID/TablesEventsID.js","redux/store.js","App.js","serviceWorker.js","index.js","components/layout/PageNav/PageNav.module.scss","components/views/Tables/Tables.module.scss","components/views/Waiter/Waiter.module.scss","components/views/Kitchen/Kitchen.module.scss","components/views/WaiterOrderID/WaiterOrderID.module.scss","components/views/WaiterOrderNew/WaiterOrderNew.module.scss"],"names":["module","exports","PageNav","className","style","component","Button","link","NavLink","exact","to","process","activeClassName","MainLayout","children","AppBar","Container","maxWidth","Toolbar","disableGutters","useStyles","makeStyles","root","marginTop","media","height","Homepage","classes","Card","CardActionArea","CardMedia","alt","image","require","title","CardContent","Typography","gutterBottom","variant","color","Copyright","align","Link","href","Date","getFullYear","theme","paper","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Grid","container","item","xs","Box","mt","demoContent","schedul","time","table1","id1","table2","id2","table3","id3","renderActions","table","Tables","styles","select","textField","InputLabelProps","shrink","button","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","Waiter","this","forceUpdate","fetchTables","props","newOrder","tables","tablezArray","ordersArray","Object","prototype","hasOwnProperty","call","element","push","parseInt","filter","val","includes","console","log","informWaiter","status","updateStatus","updateTableNr","updateWaiter","onClick","resetWaiterInfo","loading","active","error","length","scope","ready","order","React","Component","api","url","window","location","hostname","product","new","newOrd","booking","event","waiter","dateStartParamKey","dateEndParamKey","notRepeatParam","repeatParam","getLoadingState","getKitchen","kitchen","createActionName","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","UPDATE_STATUS","GET_MENU","GET_TABLENR","GET_ORDER","GET_ORDERNR","PLACE_ORDER","GET_KITCHEN","GET_CHECKED","fetchStarted","payload","fetchError","fetchKitchen","fetchFromAPI","dispatch","getState","Axios","get","then","res","data","catch","err","message","fetchMenuAPI","updateAPI","currentOrderAPI","currentOrderAPINr","orderNr","placeOrderApi","tableNr","currentOrder","currentOrderNr","placeNeewOrder","post","Math","floor","random","response","updateCheckedState","bool","updateWaiterPage","put","connect","state","Kitchen","checked","fetchOrders","index","tableNumber","remove","updateStatusKitchen","newOrderToAdd","menuData","Array","from","counter","newOrderObj","meals","amount","finalData","splice","onChange","e","defaultunchecked","inputProps","updateChecked","delete","removeKitchenOrder","WaiterOrderID","match","params","WaiterOrderNew","valueMeal","valueNumber","fetchMenu","setState","prevState","fetchcurrentOrder","fetchcurrentOrderNr","placeOrder","FormControl","InputLabel","Select","labelId","target","MenuItem","isNaN","price","resetForm","currentTableNr","nr","TablesBookingID","TablesBookingNew","TablesEventsNew","TablesEventsID","initialState","reducers","statePart","action","keys","forEach","combinedReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","createMuiTheme","primary","App","basename","StylesProvider","injectFirst","ThemeProvider","path","Boolean","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.83b8af78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TablesBookingID_component__1y-bQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TablesBookingNew_component__8cBP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TablesEventsNew_component__1bcCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TablesEventsID_component__1RUUt\"};","module.exports = __webpack_public_path__ + \"static/media/res.085b8be9.jpg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport style from './PageNav.module.scss';\n\nconst PageNav = () => {\n  return (\n    <nav className={style.component}>\n      <Button className={style.link} component={NavLink} exact to={`${process.env.PUBLIC_URL}/`} activeClassName='active'>Home</Button >\n      <Button className={style.link} component={NavLink} to={`${process.env.PUBLIC_URL}/login`} activeClassName='active'>Login</Button >\n      <Button className={style.link} component={NavLink} to={`${process.env.PUBLIC_URL}/waiter`} activeClassName='active'>Waiter</Button >\n      <Button className={style.link} component={NavLink} to={`${process.env.PUBLIC_URL}/tables`} activeClassName='active'>Tables</Button >\n      <Button className={style.link} component={NavLink} to={`${process.env.PUBLIC_URL}/kitchen`} activeClassName='active'>Kitchen</Button >\n    </nav>\n  );\n};\n\nexport default PageNav;\n","import React from 'react';\nimport PageNav from '../PageNav/PageNav';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\n\nconst MainLayout = ({ children }) =>\n  (\n    <div>\n      <AppBar>\n        <Container maxWidth='lg'>\n          <Toolbar disableGutters>\n            <PageNav />\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Container maxWidth='lg'>\n        <Toolbar />\n        {children}\n      </Container>\n    </div>\n  );\n\nMainLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default MainLayout;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport {NavLink} from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: '20px',\n  },\n  media: {\n    height:440,\n  },\n});\n\nexport default function Homepage() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea component={NavLink} to={`${process.env.PUBLIC_URL}/login`}>\n        <CardMedia\n          component=\"img\"\n          alt=\"welcome\"\n          height=\"440\"\n          image={require('./res.jpg')}\n          title=\"welcome\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Welcome\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            work hard make your boss rich\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","// import React from 'react';\n// import style from './Login.module.scss';\n\n// const Login = () => {\n//   return (\n//     <div className={style.component}>\n//       <h2>\n//           Login view\n//       </h2>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n \nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {`Don't have an account? Sign Up`}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport styles from './Tables.module.scss';\nimport { Link, NavLink } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst demoContent = {\n  date: '2020-08-17T12:00',\n};\n\nconst schedul = [\n  { time: '12:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '12:30', table1: 'reservation', id1: 'smith 2 people', table2: '', id2: '', table3: '', id3: '' },\n  { time: '13:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '13:30', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '14:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '14:30', table1: 'event', id1: 'wedding 40 people', table2: '', id2: '', table3: 'reservation', id3: 'colins 3 people' },\n  { time: '15:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '15:30', table1: '', id1: '', table2: 'event', id2: 'graduaded party 15 people', table3: '', id3: '' },\n  { time: '16:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '16:30', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '17:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '17:30', table1: '', id1: '', table2: 'reservation', id2: 'jones 4 people', table3: '', id3: '' },\n  { time: '18:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '18:30', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '19:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '19:30', table1: 'reservation', id1: 'nowak 5 people', table2: '', id2: '', table3: '', id3: '' },\n  { time: '20:00', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n  { time: '20:30', table1: '', id1: '', table2: '', id2: '', table3: '', id3: '' },\n];\n\nconst renderActions = (table, id) => {\n  switch (table) {\n    case 'reservation':\n      return (\n        <Button variant=\"contained\" component={Link} to={process.env.PUBLIC_URL + '/tables/booking/' + id}>Reservation</Button>\n      );\n    case 'event':\n      return (\n        <Button variant=\"contained\" component={Link} to={process.env.PUBLIC_URL + '/tables/events/' + id}>Event</Button>\n      );\n    default:\n      return null;\n  }\n};\n\nconst Tables = () => {\n  return (\n    <div className={styles.component}>\n      <form className={styles.select} noValidate>\n        <TextField\n          id=\"datetime-local\"\n          label=\"Reservation date\"\n          type=\"datetime-local\"\n          value={demoContent.date}\n          className={styles.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        /> <span></span>\n        <Button className={styles.button} component={NavLink} exact to={process.env.PUBLIC_URL + '/tables/booking/new/order'}>New Reservation</Button> <span></span>\n        <Button className={styles.button} component={NavLink} exact to={process.env.PUBLIC_URL + '/tables/events/new/order'}>New Event</Button>\n      </form>\n      <Paper >\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Time</TableCell>\n              <TableCell>Table 1</TableCell>\n              <TableCell>Table 2</TableCell>\n              <TableCell>Table 3</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {schedul.map(row => (\n              <TableRow key={row.time}>\n                <TableCell>\n                  {row.time}\n                </TableCell>\n                <TableCell>\n                  {renderActions(row.table1, row.id1)}\n                </TableCell>\n                <TableCell>\n                  {renderActions(row.table2, row.id2)}\n                </TableCell>\n                <TableCell>\n                  {renderActions(row.table3, row.id3)}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Tables;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Waiter.module.scss';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nclass Waiter extends React.Component {\n  static propTypes = {\n    fetchTables: PropTypes.func,\n    tables: PropTypes.any,\n    updateTableNr: PropTypes.func,\n    updateStatus: PropTypes.func,\n    updateWaiter: PropTypes.func,\n    newOrder: PropTypes.any,\n    loading: PropTypes.shape({\n      active: PropTypes.bool,\n      error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    }),\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    const { fetchTables } = this.props;\n    const { newOrder } = this.props;\n    const { tables } = this.props;\n    fetchTables();\n\n    let tablezArray = [];\n    const ordersArray = [];\n\n    for (const key in tables) {\n      if (Object.prototype.hasOwnProperty.call(tables, key)) {\n        const element = tables[key];\n        if (element['order']) {\n          tablezArray.push(parseInt(element['id']));\n        }\n      }\n    }\n\n    for (const key in newOrder) {\n      if (Object.prototype.hasOwnProperty.call(tables, key)) {\n        const element = newOrder[key];\n        ordersArray.push(element['tableNumber']);\n      }\n    }\n\n    tablezArray = tablezArray.filter(val => !ordersArray.includes(val));\n    console.log(tablezArray);\n    if (tablezArray > 0) {\n      this.informWaiter = tablezArray;\n    }\n  }\n\n  resetWaiterInfo(){\n    this.informWaiter = null;\n  }\n\n  renderActions(id, status) {\n    const { updateStatus } = this.props;\n    const { updateTableNr } = this.props;\n    const { updateWaiter } = this.props;\n    switch (status) {\n      case 'free':\n        return (\n          <>\n            <Button onClick={() => { updateStatus(id, 'thinking'); updateWaiter(id, 'thinking', ''); }}>thinking</Button>\n            <Button component={Link} to={`${process.env.PUBLIC_URL}/waiter/order/new`} onClick={() => { (updateTableNr(id)); }} >new order</Button>\n          </>\n        );\n      case 'thinking':\n        return (\n\n          <Button component={Link} to={`${process.env.PUBLIC_URL}/waiter/order/new`} onClick={() => { (updateTableNr(id)); }}>new order</Button>\n        );\n      case 'ordered':\n        return (\n          <Button onClick={() => { updateStatus(id, 'prepared'); updateWaiter(id, 'prepared'); }}>prepared</Button>\n        );\n      case 'prepared':\n        return (\n          <Button onClick={() => { updateStatus(id, 'delivered'); updateWaiter(id, 'delivered'); }}>delivered</Button>\n        );\n      case 'delivered':\n        return (\n          <Button onClick={() => { updateStatus(id, 'paid'); updateWaiter(id, 'paid'); }}>paid</Button>\n        );\n      case 'paid':\n        return (\n          <Button onClick={() => { updateStatus(id, 'free'); updateWaiter(id, 'free'); this.resetWaiterInfo();}}>free</Button>\n        );\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { loading: { active, error }, tables } = this.props;\n\n    if (active || !tables.length) {\n      return (\n        <Paper className={styles.component}>\n          <p>Loading...</p>\n        </Paper>\n      );\n    } else if (error) {\n      return (\n        <Paper className={styles.component}>\n          <p>Error! Details:</p>\n          <pre>{error}</pre>\n        </Paper>\n      );\n    } else {\n      return (\n        <Paper className={styles.component}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Table</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Order</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tables.map(row => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell>\n                    {row.status}\n                  </TableCell>\n                  <TableCell className={this.informWaiter ? styles.ready : null}  >\n                    {row.status === 'free' ? null : (\n                      <Button to={`${process.env.PUBLIC_URL}/waiter/order/${row.order}`}>\n                        {row.order}\n                      </Button>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {this.renderActions(row.id, row.status)}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          {this.informWaiter ? <h1>Table {this.informWaiter} meals are ready</h1> : null}\n        </Paper>\n      );\n    }\n  }\n}\n\nexport default Waiter;","export const api = {\n  url: '//' + window.location.hostname + (window.location.hostname === 'localhost' ? ':3131/api' : ''),\n  tables: 'tables',\n  product: 'product',\n  order: 'order',\n  new: 'new',\n  newOrd: 'newOrd',\n  booking: 'booking',\n  event: 'event',\n  waiter: 'waiter',\n  dateStartParamKey: 'date_gte',\n  dateEndParamKey: 'date_lte',\n  notRepeatParam: 'repeat=false',\n  repeatParam: 'repeat_ne=false',\n};\n\n","import Axios from 'axios';\nimport { api } from '../settings';\n\n/* selectors */\nexport const getAll = ({ tables }) => tables.data;\nexport const getLoadingState = ({ tables }) => tables.loading;\nexport const getMenu = ({ tables }) => tables.product;\nexport const currentTableNr = ({ tables }) => tables.currentTableNr;\nexport const currentOrder = ({ tables }) => tables.order;\nexport const currentOrderNr = ({ tables }) => tables.nr;\nexport const placeNewOrder = ({ tables }) => tables.newOrder;\nexport const getKitchen = ({ tables }) => tables.kitchen;\nexport const getChecked = ({ tables }) => tables.checked;\n\n/* action name creator */\nconst reducerName = 'tables';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\nconst UPDATE_STATUS = createActionName('UPDATE_STATUS');\n\nconst GET_MENU = createActionName('GET_MENU');\n\nconst GET_TABLENR = createActionName('GET_TABLENR');\n\nconst GET_ORDER = createActionName('GET_ORDER');\n\nconst GET_ORDERNR = createActionName('GET_ORDERNR');\n\nconst PLACE_ORDER = createActionName('PLACE_ORDER');\n\nconst GET_KITCHEN = createActionName('GET_KITCHEN');\n\nconst GET_CHECKED = createActionName('GET_CHECKED');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\n\nexport const updateStatus = (id, status) => ({ id, status, type: UPDATE_STATUS });\n\nexport const fetchMenu = payload => ({ payload, type: GET_MENU });\n\nexport const currentTableNum = payload => ({ payload, type: GET_TABLENR });\n\nexport const currenttOrder = payload => ({ payload, type: GET_ORDER });\n\nexport const currenttOrderNr = payload => ({ payload, type: GET_ORDERNR });\n\nexport const placeNeewOrder = (tableNr, currentOrder, currentOrderNr) => ({ tableNr, currentOrder, currentOrderNr, type: PLACE_ORDER });\n\nexport const fetchKitchen = payload => ({ payload, type: GET_KITCHEN });\n\nexport const fetchChecked = payload => ({ payload, type: GET_CHECKED });\n\n/* thunk creators */\nexport const fetchFromAPI = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.tables}`)\n      .then(res => {\n        dispatch(fetchSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const fetchMenuAPI = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.product}`)\n      .then(res => {\n        dispatch(fetchMenu(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const updateAPI = (id, status) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.tables}`)\n      .then(() => {\n        dispatch(updateStatus(id, status));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const updateTableNr = (id) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.tables}`)\n      .then(res => {\n        dispatch(currentTableNum(id));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const currentOrderAPI = (order) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.order}`)\n      .then(res => {\n        dispatch(currenttOrder(order));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const currentOrderAPINr = (orderNr) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.order}`)\n      .then(res => {\n        dispatch(currenttOrderNr(orderNr));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\nexport const placeOrderApi = (tableNr, currentOrder, currentOrderNr) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.order}`)\n      .then(() => {\n        dispatch(placeNeewOrder(tableNr, currentOrder, currentOrderNr));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n\n    Axios.post(`${api.url}/${api.order}`, { 'id': '', 'order': Math.floor(Math.random() * (999 - 1 + 1) + 1), 'meals': currentOrder, 'amount': currentOrderNr, 'tableNumber': tableNr })\n      .then(function (response) {\n\n        console.log(response);\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n};\n\nexport const fetchKitchenAPI = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.order}`)\n      .then(res => {\n        dispatch(fetchKitchen(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const updateStateKitchen = (order) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n    Axios\n      .get(`${api.url}/${api.order}`)\n\n      .then(res => {\n        dispatch(fetchKitchen(order));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const updateCheckedState = (bool) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/${api.tables}`)\n      .then(() => {\n        dispatch(fetchChecked(bool));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const removeKitchenOrder = (id) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios.delete(`${api.url}/${api.order}/${id}`)\n\n      .then(function (response) {\n\n        console.log('delete response', response);\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n};\n\nexport const updateWaiterPage = (id, status, order) => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios.put(`${api.url}/${api.tables}/${id}`, { 'status': status, 'order': order })\n\n      .then(function (response) {\n\n        console.log('put response', response);\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n};\n\n/* reducer */\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    case UPDATE_STATUS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: statePart.data.map(currentOrder => currentOrder.id === action.id ?\n          { ...currentOrder, status: action.status } :\n          currentOrder\n        ),\n      };\n    }\n    case GET_MENU: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        product: action.payload,\n      };\n    }\n    case GET_TABLENR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        currentTableNr: action.payload,\n      };\n    }\n\n    case GET_ORDER: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        order: action.payload,\n      };\n    }\n\n    case GET_ORDERNR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        nr: action.payload,\n      };\n    }\n\n    case PLACE_ORDER: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        newOrder: {\n          tableNr: action.tableNr,\n          currentOrder: action.currentOrder,\n          currentOrderNr: action.currentOrderNr,\n        },\n      };\n    }\n\n    case GET_KITCHEN: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        kitchen: action.payload,\n      };\n    }\n\n    case GET_CHECKED: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        checked: action.payload,\n      };\n    }\n\n    default:\n      return statePart;\n  }\n}","import { connect } from 'react-redux';\nimport Waiter from './Waiter';\nimport { getAll, fetchFromAPI, getLoadingState, updateAPI, updateTableNr, updateWaiterPage, getKitchen} from '../../../redux/tablesRedux';\n\nconst mapStateToProps = (state) => ({\n  tables: getAll(state),\n  loading: getLoadingState(state),\n  newOrder: getKitchen(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTables: () => dispatch(fetchFromAPI()),\n  updateStatus: (id, status) => dispatch(updateAPI(id, status)),\n  updateTableNr: (id) => dispatch(updateTableNr(id)),\n  updateWaiter: (id,status,order)=> dispatch(updateWaiterPage(id,status,order)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Waiter);","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Kitchen.module.scss';\nimport PropTypes from 'prop-types';\n\nclass Kitchen extends React.Component {\n\n  static propTypes = {\n    fetchOrders: PropTypes.func,\n    updateStatusKitchen: PropTypes.func,\n    newOrder: PropTypes.any,\n    newOrderToAdd: PropTypes.any,\n    checked: PropTypes.any,\n    updateChecked: PropTypes.func,\n    remove: PropTypes.any,\n    updateWaiter: PropTypes.any,\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    let { checked } = this.props;\n    const { fetchOrders } = this.props;\n    if (checked === false) { fetchOrders(); }\n  }\n\n  componentWillUnmount() {\n    let { newOrder } = this.props;\n    if (newOrder.length > 0) {\n      const index = newOrder.length - 1;\n      this.props.updateWaiter(newOrder[index].tableNumber, 'ordered', newOrder[index].order);\n    }\n  }\n\n  render() {\n    const { newOrder } = this.props;\n    const { remove } = this.props;\n    const { updateStatusKitchen } = this.props;\n    let { newOrderToAdd } = this.props;\n    const menuData = Array.from(newOrder);\n    let counter = 7;\n    const newOrderObj = {\n      id: newOrderToAdd.currentOrder ? menuData.length + 1 : null,\n      order: newOrderToAdd.currentOrder ? counter * 4 : null,\n      meals: newOrderToAdd.currentOrder,\n      amount: parseInt(newOrderToAdd.currentOrderNr),\n      tableNumber: parseInt(newOrderToAdd.tableNr),\n    };\n\n    counter++;\n    let finalData = [...menuData, newOrderObj];\n   \n    finalData.splice(-1, 1);\n    return (\n      <div className={styles.component}>\n        <Paper >\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Queue</TableCell>\n                <TableCell>Order number</TableCell>\n                <TableCell>Table number</TableCell>\n                <TableCell>Meals</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Complited</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {finalData.map(row => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell>\n                    {row.order && (\n                      <Button variant=\"contained\" component={NavLink} to={`${process.env.PUBLIC_URL}/waiter/order/${row.order}`}>\n                        {row.order}\n                      </Button>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {row.tableNumber ? row.tableNumber : null}\n                  </TableCell>\n                  <TableCell>\n                    {row.meals}\n                  </TableCell>\n                  <TableCell>\n                    {row.amount ? row.amount : null}\n                  </TableCell>\n                  <TableCell onChange={ e => { updateStatusKitchen(finalData.filter(order => order.id !== row.id)); remove(row.id);}}>\n                    {row.amount ? <Checkbox defaultunchecked=\"true\" inputProps={{ 'aria-label': 'primary checkbox' }} /> : null}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>);\n  }\n}\nexport default Kitchen;\n\n","import { connect } from 'react-redux';\nimport Kitchen from './Kitchen';\nimport { getKitchen, fetchKitchenAPI,getLoadingState, placeNewOrder, updateStateKitchen, getChecked, updateCheckedState,removeKitchenOrder, updateWaiterPage} from '../../../redux/tablesRedux';\n\nconst mapStateToProps = (state) => ({\n  newOrder: getKitchen(state),\n  loading: getLoadingState(state),\n  newOrderToAdd: placeNewOrder(state),\n  checked: getChecked(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchOrders: () => dispatch(fetchKitchenAPI()),\n  updateStatusKitchen: (id) => dispatch(updateStateKitchen(id)),\n  updateChecked: (bool) => dispatch(updateCheckedState(bool)),\n  remove: (id)=> dispatch(removeKitchenOrder(id)),\n  updateWaiter: (id,status,order)=> dispatch(updateWaiterPage(id,status,order)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Kitchen);","import React from 'react';\nimport style from './WaiterOrderID.module.scss';\nimport PropTypes from 'prop-types';\n\nconst WaiterOrderID = (props) => {\n  return (\n    <div className={style.component}>\n      <h2>\n      WaiterOrderID view\n      </h2>\n      <p>{props.match.params.id ? props.match.params.id : ''}</p>\n    </div>\n  );\n};\n\nWaiterOrderID.propTypes = {\n  match: PropTypes.string,\n};\n\nexport default WaiterOrderID;\n","import React from 'react';\nimport styles from './WaiterOrderNew.module.scss';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Link } from 'react-router-dom';\n\nclass WaiterOrderNew extends React.Component {\n  static propTypes = {\n    fetchMenu: PropTypes.func,\n    product: PropTypes.any,\n    tableId: PropTypes.any,\n    tableNr: PropTypes.any,\n    currentOrder: PropTypes.any,\n    currentOrderNr: PropTypes.any,\n    fetchcurrentOrder: PropTypes.any,\n    fetchcurrentOrderNr: PropTypes.any,\n    placeOrder: PropTypes.func,\n    newOrder: PropTypes.any,\n    \n  }\n  componentDidMount() {\n    const { fetchMenu } = this.props;\n    fetchMenu();\n  }\n\n  state = {\n    valueMeal: '',\n    valueNumber: '',\n  }\n\n  resetForm() {\n    this.setState(prevState => ({\n      valueNumber: '',\n    }));\n    this.setState(prevState => ({\n      valueMeal: '',\n    }));\n  }\n\n  render() {\n    const { product } = this.props;\n    const { tableNr } = this.props;\n    const { fetchcurrentOrder } = this.props;\n    const { currentOrder } = this.props;\n    const { fetchcurrentOrderNr } = this.props;\n    const { currentOrderNr } = this.props;\n    const { placeOrder } = this.props;\n\n    const menuData = Array.from(product);\n\n    const handleChangeTable = (event) => {\n      this.setState(prevState => ({\n        valueNumber: event.target.value,\n      }));\n      fetchcurrentOrderNr(event.target.value);\n    };\n\n    const handleChangeOrder = (event) => {\n      this.setState(prevState => ({\n        valueMeal: event.target.value,\n      }));\n      fetchcurrentOrder(event.target.value);\n\n    };\n    return (\n      <>\n        <Paper className={styles.component}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Table nr: {typeof tableNr === 'string' ? tableNr : null}</TableCell>\n                <TableCell></TableCell>\n                <TableCell>Number of Meals</TableCell>\n                <TableCell>Price</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow >\n                <TableCell>\n                  <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\"></InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"select-table\"\n                      value={this.state.valueMeal}\n                      onChange={handleChangeOrder}\n                    >{menuData.map(row => (\n                        <MenuItem key={row.name} value={row.name}>{row.name}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </TableCell>\n                <TableCell>\n                  {/* {typeof currentOrder === 'string' ? currentOrder : null} */}\n                </TableCell>\n                <TableCell>\n                  <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\"></InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={this.state.valueNumber}\n                      onChange={handleChangeTable}\n                    >\n                      <MenuItem value={1}>1</MenuItem>\n                      <MenuItem value={2}>2</MenuItem>\n                      <MenuItem value={3}>3</MenuItem>\n                      <MenuItem value={4}>4</MenuItem>\n                    </Select>\n                  </FormControl>\n                  <span>    </span>\n                </TableCell>\n                <TableCell\n                //  value={this.state.price}\n                >\n                  {this.state.valueNumber ? menuData.map(item => item.name === currentOrder\n                    ? (isNaN(item.price * currentOrderNr) ? null : item.price * currentOrderNr)\n                    : null) : ''}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Button onClick={e => { placeOrder(parseInt(tableNr), currentOrder, currentOrderNr); this.resetForm(); }} component={Link} to={`${process.env.PUBLIC_URL}/kitchen`}>Place Order</Button>\n        </Paper>\n      </>\n    );\n  }\n}\nexport default WaiterOrderNew;","import { connect } from 'react-redux';\nimport WaiterOrderNew from './WaiterOrderNew';\nimport { getMenu, fetchMenuAPI, currentTableNr, currentOrderAPI, currentOrder, currentOrderNr, currentOrderAPINr, placeOrderApi, getKitchen, updateWaiterPage} from '../../../redux/tablesRedux';\n\nconst mapStateToProps = (state) => ({\n  product: getMenu(state),\n  tableNr: currentTableNr(state),\n  currentOrder: currentOrder(state),\n  currentOrderNr: currentOrderNr(state),\n  newOrder: getKitchen(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchMenu: () => dispatch(fetchMenuAPI()),\n  fetchcurrentOrder: (order) => dispatch(currentOrderAPI(order)),\n  fetchcurrentOrderNr: (order) => dispatch(currentOrderAPINr(order)),\n  placeOrder: (tableNr, currentOrder, currentOrderNr) => dispatch(placeOrderApi(tableNr, currentOrder, currentOrderNr)),\n  updateWaiter: (id,status,order)=> dispatch(updateWaiterPage(id,status,order)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WaiterOrderNew);","import React from 'react';\nimport style from './TablesBookingID.module.scss';\nimport PropTypes from 'prop-types';\n\nconst TablesBookingID = (props)=> {\n  return (\n    <div className={style.component}>\n      <h2>\n      TablesBookingID view\n      </h2>\n      <p>{props.match.params.id !== 'new' ? props.match.params.id : null}</p>\n    </div>\n  );\n};\n\nTablesBookingID.propTypes = {\n  match: PropTypes.string,\n};\n\nexport default TablesBookingID;\n","import React from 'react';\nimport style from './TablesBookingNew.module.scss';\n\nconst TablesBookingNew = () => {\n  return (\n    <div className={style.component}>\n      <h2>\n      TablesBookingNew view\n      </h2>\n    </div>\n  );\n};\n\nexport default TablesBookingNew;\n","import React from 'react';\nimport style from './TablesEventsNew.module.scss';\n\nconst TablesEventsNew = () => {\n  return (\n    <div className={style.component}>\n      <h2>\n      TablesEventsNew view\n      </h2>\n    </div>\n  );\n};\n\nexport default TablesEventsNew;\n","import React from 'react';\nimport style from './TablesEventsID.module.scss';\nimport PropTypes from 'prop-types';\n\nconst TablesEventsID = (props) => {\n  return (\n    <div className={style.component}>\n      <h2>\n      TablesEventsID view\n      </h2>\n      <p>{props.match.params.id !== 'new' ? props.match.params.id : ''}</p>\n    </div>\n  );\n};\n\nTablesEventsID.propTypes = {\n  match: PropTypes.string,\n};\n\nexport default TablesEventsID;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport tablesReducer from './tablesRedux';\n\n// define initial state and shallow-merge initial data\nconst initialState = {\n\n  tables: {\n    newOrder: {\n      tableNr: {},\n      currentOrder: '',\n      currentOrderNr: {},\n    },\n    checked:false,\n    kitchen:{},\n    order: {},\n    nr: {},\n    currentTableNr: {},\n    product: {},\n    data: {},\n    loading: {\n      active: false,\n      error: false,\n    },\n  },\n};\n\n// define reducers\nconst reducers = {\n  tables: tablesReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nconst store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;","import React from 'react';\nimport MainLayout from './components/layout/MainLayout/MainLayout.js';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Homepage from './components/views/Homepage/Homepage';\nimport Login from './components/views/Login/Login';\nimport Tables from './components/views/Tables/Tables';\nimport Waiter from './components/views/Waiter/WaiterContainer';\nimport Kitchen from './components/views/Kitchen/KitchenContainer';\nimport WaiterOrderID from './components/views/WaiterOrderID/WaiterOrderID';\nimport WaiterOrderNew from './components/views/WaiterOrderNew/WaiterOrderNewContainer';\nimport TablesBookingID from './components/views/TablesBookingID/TablesBookingID';\nimport TablesBookingNew from './components/views/TablesBookingNew/TablesBookingNew';\nimport TablesEventsNew from './components/views/TablesEventsNew/TablesEventsNew';\nimport TablesEventsID from './components/views/TablesEventsID/TablesEventsID';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Provider } from 'react-redux';\nimport  store  from './redux/store.js';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2B4C6F',\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={'/panel'}>\n        <StylesProvider injectFirst>\n          <ThemeProvider theme={theme}>\n            <MainLayout >\n              <Switch>\n                <Route exact path={`${process.env.PUBLIC_URL}/`} component={Homepage} />\n                <Route exact path={process.env.PUBLIC_URL + '/login'} component={Login} />\n                <Route exact path={process.env.PUBLIC_URL + '/waiter'} component={Waiter} />\n                <Route exact path={process.env.PUBLIC_URL + '/kitchen'} component={Kitchen} />\n                <Route exact path={process.env.PUBLIC_URL + '/tables'} component={Tables} />\n                <Route exact path={process.env.PUBLIC_URL + '/tables/booking/:id'} component={TablesBookingID} />\n                <Route exact path={process.env.PUBLIC_URL + '/tables/booking/new/order'} component={TablesBookingNew} />\n                <Route exact path={process.env.PUBLIC_URL + '/tables/events/:id'} component={TablesEventsID} />\n                <Route exact path={process.env.PUBLIC_URL + '/tables/events/new/order'} component={TablesEventsNew} />\n                <Route exact path={process.env.PUBLIC_URL + '/waiter/order/new'} component={WaiterOrderNew} />\n                <Route exact path={process.env.PUBLIC_URL + '/waiter/order/:id'} component={WaiterOrderID} />\n              </Switch>\n            </MainLayout>\n          </ThemeProvider>\n        </StylesProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/global.scss';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"PageNav_component__3CgTf\",\"link\":\"PageNav_link__1jSdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Tables_component__gTXt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Waiter_component__3m0jI\",\"ready\":\"Waiter_ready__14g52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Kitchen_component__5azIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"WaiterOrderID_component__3OV2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"WaiterOrderNew_component__2vJmV\"};"],"sourceRoot":""}